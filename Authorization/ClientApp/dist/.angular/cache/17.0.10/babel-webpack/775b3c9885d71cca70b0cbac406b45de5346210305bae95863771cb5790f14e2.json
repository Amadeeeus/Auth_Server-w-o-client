{"ast":null,"code":"import { FormsModule } from \"@angular/forms\";\nimport { User } from \"./user.model\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./app.AuthService\";\nimport * as i3 from \"@angular/forms\";\nexport let AppRegister = /*#__PURE__*/(() => {\n  class AppRegister {\n    http;\n    authService;\n    formData = {\n      firstName: '',\n      lastName: '',\n      email: '',\n      password: ''\n    };\n    user = new User();\n    constructor(http, authService) {\n      this.http = http;\n      this.authService = authService;\n    }\n    onSubmit() {\n      this.authService.setIsClickLogin(false);\n      this.http.post('/api/register', this.formData).subscribe({\n        next: res => {\n          this.user = res;\n          if (this.user) {\n            this.authService.setIsLogined(true);\n            this.authService.setButtons(true);\n            this.authService.setIsClickRegister(false);\n          }\n        },\n        error: err => {\n          console.error(\"Ошибка\", err);\n          this.authService.setIsClickRegister(false);\n        }\n      });\n    }\n    togglePassword() {\n      const field = document.querySelector('#password');\n      if (field.type === 'password') {\n        field.type = 'text';\n      } else {\n        field.type = 'password';\n      }\n    }\n    toggleReset() {\n      this.formData.email = \"\";\n      this.formData.password = \"\";\n      this.formData.firstName = \"\";\n      this.formData.lastName = \"\";\n    }\n    toggleBack() {\n      this.authService.setIsClickRegister(false);\n      this.authService.setButtons(true);\n    }\n    static ɵfac = function AppRegister_Factory(t) {\n      return new (t || AppRegister)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.AuthService));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AppRegister,\n      selectors: [[\"register\"]],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 14,\n      vars: 5,\n      consts: [[\"action\", \"\", \"method\", \"post\", 1, \"registerForm\", 3, \"ngSubmit\"], [\"form\", \"ngForm\"], [\"type\", \"text\", 1, \"input\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"placeholder\", \"email\", 1, \"input\", 3, \"ngModel\", \"ngModelChange\"], [\"id\", \"password\", \"type\", \"password\", 1, \"input\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"submitbutton\"], [1, \"mainbutton\", 3, \"click\"]],\n      template: function AppRegister_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"form\", 0, 1);\n          i0.ɵɵlistener(\"ngSubmit\", function AppRegister_Template_form_ngSubmit_0_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(2, \"input\", 2);\n          i0.ɵɵlistener(\"ngModelChange\", function AppRegister_Template_input_ngModelChange_2_listener($event) {\n            return ctx.formData.firstName = $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"input\", 2);\n          i0.ɵɵlistener(\"ngModelChange\", function AppRegister_Template_input_ngModelChange_3_listener($event) {\n            return ctx.formData.lastName = $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"input\", 3);\n          i0.ɵɵlistener(\"ngModelChange\", function AppRegister_Template_input_ngModelChange_4_listener($event) {\n            return ctx.formData.email = $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"input\", 4);\n          i0.ɵɵlistener(\"ngModelChange\", function AppRegister_Template_input_ngModelChange_5_listener($event) {\n            return ctx.formData.password = $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"button\", 5);\n          i0.ɵɵtext(7);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(8, \"button\", 6);\n          i0.ɵɵlistener(\"click\", function AppRegister_Template_button_click_8_listener() {\n            return ctx.toggleReset();\n          });\n          i0.ɵɵtext(9, \"\\u0421\\u0431\\u0440\\u043E\\u0441\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"button\", 6);\n          i0.ɵɵlistener(\"click\", function AppRegister_Template_button_click_10_listener() {\n            return ctx.togglePassword();\n          });\n          i0.ɵɵtext(11, \"\\u041F\\u043E\\u043A\\u0430\\u0437\\u0430\\u0442\\u044C \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(12, \"button\", 6);\n          i0.ɵɵlistener(\"click\", function AppRegister_Template_button_click_12_listener() {\n            return ctx.toggleBack();\n          });\n          i0.ɵɵtext(13, \"\\u041D\\u0430\\u0437\\u0430\\u0434\");\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngModel\", ctx.formData.firstName);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngModel\", ctx.formData.lastName);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngModel\", ctx.formData.email);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngModel\", ctx.formData.password);\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate1(\"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F:\", ctx.formData.email, \"\");\n        }\n      },\n      dependencies: [FormsModule, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm],\n      styles: [\"*[_ngcontent-%COMP%]{background-color:#fff}.input[_ngcontent-%COMP%]{color:#378067;margin:.5% 2%;border-radius:7px;border:2px solid #378067;height:100%}.mainbutton[_ngcontent-%COMP%]{background-color:#378067;padding:10px;margin:6% 1%;width:30%;border:2px solid #378067;color:#fff;border-radius:7px}.submitbutton[_ngcontent-%COMP%]{background-color:#378067;padding:5px;margin:2% 5%;width:20%;height:10%;border:2px solid #378067;color:#fff;border-radius:5px}\"]\n    });\n  }\n  return AppRegister;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}